/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.8.0-rc1
 */
!function(){"use strict";angular.module("material.components.autocomplete",["material.core"])}(),function(){"use strict";function e(e,t,n,a,l,i){function o(){c(),r()}function r(){var e=angular.element(C.ul),t=angular.element(C.input),n=e.attr("id")||"ul_"+l.nextUid();e.attr("id",n),t.attr("aria-owns",n)}function c(){e.$watch("searchText",function(e){if(!e)return x.loading=!1,x.matches=[];var t=e.toLowerCase();T&&T.cancel&&(T.cancel(),T=null),v[t]?x.matches=v[t]:x.hidden||(x.loading=!0,x.fetch(e))})}function m(t){var n=e.$parent.$eval($),l=t.toLowerCase();T=a.when(n).then(function(n){v[l]=n,t===e.searchText&&(T=null,x.loading=!1,x.matches=n)})}function u(e){switch(e.keyCode){case i.KEY_CODE.DOWN_ARROW:if(x.loading)return;e.preventDefault(),x.index=Math.min(x.index+1,x.matches.length-1),g();break;case i.KEY_CODE.UP_ARROW:if(x.loading)return;e.preventDefault(),x.index=Math.max(0,x.index-1),g();break;case i.KEY_CODE.ENTER:if(x.loading)return;e.preventDefault(),h(x.index);break;case i.KEY_CODE.ESCAPE:x.matches=[],x.hidden=!0,x.index=-1;break;default:x.index=-1,x.hidden=!1,n(function(){x.hidden=s()})}}function d(){e.searchText="",h(-1)}function s(){return 1===x.matches.length&&e.searchText===p(x.matches[0])}function p(t){return t&&e.itemText?t[e.itemText]:t}function h(t){e.selectedItem=x.matches[t],e.searchText=p(e.selectedItem)||e.searchText,x.hidden=!0,x.index=-1,x.matches=[]}function g(){var e=41*x.index,t=e+41,n=225.5;e<C.ul.scrollTop?C.ul.scrollTop=e:t>C.ul.scrollTop+n&&(C.ul.scrollTop=t-n)}var x=this,f=e.itemsExpr.split(/\ in\ /i),$=f[1],C={main:t[0],ul:t[0].getElementsByTagName("ul")[0],input:t[0].getElementsByTagName("input")[0]},T=null,v={};return x.scope=e,x.parent=e.$parent,x.itemName=f[0],x.matches=[],x.loading=!1,x.hidden=!0,x.index=0,x.keydown=u,x.clear=d,x.select=h,x.fetch=l.debounce(m),o()}angular.module("material.components.autocomplete").controller("MdAutocompleteCtrl",e),e.$inject=["$scope","$element","$timeout","$q","$mdUtil","$mdConstant"]}(),function(){"use strict";function e(){return{template:'        <md-autocomplete-wrap role="listbox">          <input type="text"              ng-model="searchText"              ng-keydown="$mdAutocompleteCtrl.keydown($event)"              placeholder="{{placeholder}}"              aria-label="{{placeholder}}"              aria-autocomplete="list"              aria-haspopup="true"              aria-activedescendant=""              aria-expanded="{{!$mdAutocompleteCtrl.hidden}}"/>          <button              type="button"              ng-if="searchText"              ng-click="$mdAutocompleteCtrl.clear()">              <span aria-hidden="true">X</span>              <span class="visually-hidden">Clear</span>              </button>          <md-progress-linear ng-if="$mdAutocompleteCtrl.loading" md-mode="indeterminate"></md-progress-linear>        </md-autocomplete-wrap>        <ul role="presentation">          <li ng-repeat="(index, item) in $mdAutocompleteCtrl.matches"              ng-class="{ selected: index === $mdAutocompleteCtrl.index }"              ng-if="searchText && !$mdAutocompleteCtrl.hidden"              ng-click="$mdAutocompleteCtrl.select(index)"              ng-transclude              md-autocomplete-list-item="$mdAutocompleteCtrl.itemName">          </li>        </ul>        <aria-status            class="visually-hidden"            aria-atomic="true"            role="status"            aria-live="polite">          <p ng-repeat="item in $mdAutocompleteCtrl.matches">{{item.display}}</p>        </aria-status>',transclude:!0,controller:"MdAutocompleteCtrl",controllerAs:"$mdAutocompleteCtrl",scope:{searchText:"=mdSearchText",selectedItem:"=mdSelectedItem",itemsExpr:"@mdItems",itemText:"@mdItemText",placeholder:"@placeholder"}}}angular.module("material.components.autocomplete").directive("mdAutocomplete",e)}(),function(){"use strict";function e(e,t,n){function a(e){return e?e.replace(/[\*\[\]\(\)\{\}\\\^\$]/g,"\\$&"):e}var l=t.attr("md-highlight-text"),i=n(t.text())(e);e.$watch(l,function(e){var n=new RegExp("^"+a(e),"i"),l=i.replace(n,'<span class="highlight">$&</span>');t.html(l)})}angular.module("material.components.autocomplete").controller("MdHighlightCtrl",e),e.$inject=["$scope","$element","$interpolate"]}(),function(){"use strict";function e(){return{terminal:!0,scope:!1,controller:"MdHighlightCtrl"}}angular.module("material.components.autocomplete").directive("mdHighlightText",e)}(),function(){"use strict";function e(e,t){function n(n,a,l,i){var o=i.parent.$new(!1,i.parent),r=i.scope.$eval(l.mdAutocompleteListItem);o[r]=n.item,e(a.contents())(o),a.attr({role:"option",id:"item_"+t.nextUid()})}return{require:"^?mdAutocomplete",terminal:!0,link:n,scope:!1}}angular.module("material.components.autocomplete").directive("mdAutocompleteListItem",e),e.$inject=["$compile","$mdUtil"]}();