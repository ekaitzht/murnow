/*!
 * Angular Material Design
 * https://github.com/angular/material
 * @license MIT
 * v0.9.0-rc2-master-4a648d5
 */
!function(){"use strict";function e(e,n,i,t,c,d,a){function o(n,o){return o.type="checkbox",o.tabindex=o.tabindex||"0",n.attr("role",o.type),function(n,o,u,l){function r(e,i,t){u[e]&&n.$watch(u[e],function(e){t[e]&&o.attr(i,t[e])})}function m(e){var n=e.which||e.keyCode;(n===t.KEY_CODE.SPACE||n===t.KEY_CODE.ENTER)&&(e.preventDefault(),o.hasClass("md-focused")||o.addClass("md-focused"),f(e))}function f(e){o[0].hasAttribute("disabled")||n.$apply(function(){var n=u.ngChecked?u.checked:!l.$viewValue;l.$setViewValue(n,e&&e.type),l.$render()})}function v(){l.$viewValue?o.addClass(s):o.removeClass(s)}l=l||d.fakeNgModel(),c(o),u.ngChecked&&n.$watch(n.$eval.bind(n,u.ngChecked),l.$setViewValue.bind(l)),r("ngDisabled","tabindex",{"true":"-1","false":u.tabindex}),i.expectWithText(o,"aria-label"),e.link.pre(n,{on:angular.noop,0:{}},u,[l]),n.mouseActive=!1,o.on("click",f).on("keypress",m).on("mousedown",function(){n.mouseActive=!0,a(function(){n.mouseActive=!1},100)}).on("focus",function(){n.mouseActive===!1&&o.addClass("md-focused")}).on("blur",function(){o.removeClass("md-focused")}),l.$render=v}}e=e[0];var s="md-checked";return{restrict:"E",transclude:!0,require:"?ngModel",template:'<div class="md-container" md-ink-ripple md-ink-ripple-checkbox><div class="md-icon"></div></div><div ng-transclude class="md-label"></div>',compile:o}}angular.module("material.components.checkbox",["material.core"]).directive("mdCheckbox",e),e.$inject=["inputDirective","$mdInkRipple","$mdAria","$mdConstant","$mdTheming","$mdUtil","$timeout"]}();